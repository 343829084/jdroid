apply plugin: 'jetty'

description = 'Jdroid Sample Server'

repositories {
	mavenCentral()
	maven {
		url "http://dl.dropbox.com/u/8520947/maven-repository/"
	}
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 30, 'seconds'
}

dependencies {
	compile 'com.jdroidframework:jdroid-javaweb:0.7.0-SNAPSHOT'
}

version = '0.7.0-SNAPSHOT'

// Generate the settings.properties
project.afterEvaluate {

	project.task('generateSettings') << {

		def googleServerApiKeyValue = project.hasProperty('googleServerApiKey') ? googleServerApiKey : System.getenv('googleServerApiKey')
		def httpMockEnabledValue = project.hasProperty('httpMockEnabled') ? httpMockEnabled : System.getenv('httpMockEnabled')
		def httpMockSleepDurationValue = project.hasProperty('httpMockSleepDuration') ? httpMockSleepDuration : System.getenv('httpMockSleepDuration')

		new File("$projectDir/src/main/resources/settings.properties").withWriter { out ->
			out.writeLine("appName=${project.name}")
			out.writeLine("appVersion=${project.version}")
			out.writeLine("googleServerApiKey=${googleServerApiKeyValue}")
			out.writeLine("httpMockEnabled=${httpMockEnabledValue}")
			out.writeLine("httpMockSleepDuration=${httpMockSleepDurationValue}")
		}
	}

	project.tasks.'processResources'.dependsOn 'generateSettings'

}

// Task to make Heroku Gradle Build Pack work. https://github.com/heroku/heroku-buildpack-gradle
task heroku(dependsOn: ':jdroid-sample-server:assemble') << {
}
